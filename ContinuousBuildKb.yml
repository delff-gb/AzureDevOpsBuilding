# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  MSBUILD: $(msbuildpath)
  BL_PATH: $(genexus)
  WORKING_DIR: $(kbpath)
  KB_ALIAS: $(kbalias)
  GXSERVER_URL: $(serverurl)
  GXSERVER_USER: $(serveruser)
  GXSERVER_PASS: $(password)
  PUBLISH_SETTINGS: $(azurePublish)
  DEPLOYMENT_UNIT: $(deploymentUnit)
  KBENVIRONMENT: $(environment)
  KBGENERATOR: $(generator)
  DEPLOY_NAME: $(deploymentUnit)$(Build.BuildNumber)
  APPLICATION_KEY: $(encriptKey)

# Scheduled triggers. Can also be setup through UI, which takes precendence.
schedules:
  - cron: "*/10 * * * *"
    displayName: every 10 min trigger
    branches:
      include:
        - main
    always: true

trigger:
  - main

pool:
  name: $(agent)

jobs:
  - job: CheckoutOrUpdate
    condition: always()
    steps:
      - script: >
          $(MSBUILD) "$(BL_PATH)\AzureCICD.msbuild" -target:CreateOrUpdateKB /p:WorkingDirectory=$(WORKING_DIR) /p:CreateDbInKbFolder=True
          /p:DbaseName=$(KB_ALIAS) /p:DbaseUseIntegratedSecurity=True /p:ServerUrl=$(GXSERVER_URL) /p:ServerKbAlias=$(KB_ALIAS) 
          /p:ServerUsername=$(GXSERVER_USER) /p:ServerPassword=$(GXSERVER_PASS)
          
          type "$(WORKING_DIR)/updateCount.txt"

        displayName: CreateOrUpdateKB



  - job: BuildAndDeploy
    dependsOn: CheckoutOrUpdate
    condition: or(and(succeeded(), gt(variables['updateCount'], '0')),eq(variables['forceRebuild'], 'true'))
    steps:
      - script: $(MSBUILD) "$(BL_PATH)\teamdev.Msbuild" -target:Build /p:WorkingDirectory=$(WORKING_DIR) 
        displayName: Build KB

      - script: >
          $(MSBUILD) "$(BL_PATH)\deploy.msbuild" /t:CreateDeploy /p:KBPath=$(WORKING_DIR);KBEnvironment=$(KBENVIRONMENT);DeploymentUnit=$(DEPLOYMENT_UNIT) 
          /p:ProjectName=$(DEPLOY_NAME) /p:TargetId="AZURE" /p:ObjectNames="DeploymentUnitCategory:$(DEPLOYMENT_UNIT)"
          /p:DEPLOY_TARGETS="$(BL_PATH)\DeploymentTargets\Azure\azure.targets" 
          /p:DeployFullPath="$(WORKING_DIR)\NetModel\Deploy\AZURE\$(DEPLOYMENT_UNIT)\$(DEPLOY_NAME)" 
          /p:WebSourcePath="$(WORKING_DIR)\NetModel\web" /p:GX_PROGRAM_DIR="$(BL_PATH)" 
          /p:AZURE_PUBLISH_SETTINGS="$(PUBLISH_SETTINGS)" 
          /p:APPLICATION_KEY="$(APPLICATION_KEY)"
        displayName: Create Deploy

      - script: >  
          $(MSBUILD) /ToolsVersion:4.0 "$(WORKING_DIR)\NetModel\web\$(DEPLOY_NAME).gxdproj" /t:CreatePackage 
          /p:GX_PROGRAM_DIR="$(BL_PATH)" /p:AZURE_PUBLISH_SETTINGS="$(PUBLISH_SETTINGS)" 
          /p:APPLICATION_KEY="$(APPLICATION_KEY)"
        displayName: Create Package

      - script: >
          $(MSBUILD) "$(BL_PATH)\DeploymentTargets\Azure\deploy.msbuild" /t:Deploy 
          /p:AZURE_PUBLISH_SETTINGS="$(PUBLISH_SETTINGS)" 
          /p:APPLICATION_KEY="$(APPLICATION_KEY)" /p:APPLICATION_NAME="$(DEPLOY_NAME)" 
          /p:DEPLOY_PATH="$(WORKING_DIR)\NetModel\Deploy\AZURE\$(DEPLOYMENT_UNIT)\$(DEPLOY_NAME)" 
          /p:GX_PROGRAM_DIR="$(BL_PATH)" /p:DeploySource="$(WORKING_DIR)\NetModel\Deploy\AZURE\$(DEPLOY_NAME).zip" 
          /p:CreateCloudPackage="false" /p:KBPath=$(WORKING_DIR) /p:KBEnvironment="$(KBENVIRONMENT)" /p:KBVersion="ActualizacionAmbiente2" 
          /p:DeploymentUnit="$(DEPLOYMENT_UNIT)" /p:ProjectName="$(DEPLOY_NAME)" /p:TargetId="AZURE" /p:ObjectNames="DeploymentUnitCategory:$(DEPLOYMENT_UNIT)"
          /p:DEPLOY_TARGETS="$(BL_PATH)\DeploymentTargets\Azure\azure.targets" 
          /p:DeployFullPath="$(WORKING_DIR)\NetModel\Deploy\AZURE\$(DEPLOYMENT_UNIT)\$(DEPLOY_NAME)" 
          /p:WebSourcePath="$(WORKING_DIR)\NetModel\web" /p:GENERATOR="$(KBGENERATOR)"
        displayName: Deploy to WebApp
      
